// server/services/aiImageAnalysisService.js
require('dotenv').config();
const OpenAI = require('openai');
const openai = new OpenAI();

async function analyzeInspirationImage(imageBase64) {
    console.log("ü§ñ Iniciando an√°lisis de imagen con IA Visual...");

    if (!imageBase64) {
        throw new Error("No se proporcion√≥ la imagen en formato Base64.");
    }

    const prompt = `
        Analiza la siguiente imagen de un pastel y describe sus caracter√≠sticas principales. Enf√≥cate en:
        1.  **Descripci√≥n Visual:** Colores predominantes, n√∫mero de pisos (si aplica), forma general, estilo (ej. moderno, cl√°sico, infantil), decoraciones principales (flores, figuras, patrones, texto).
        2.  **T√©cnicas Probables:** Identifica t√©cnicas que parecen haberse usado (ej. cobertura de fondant, buttercream liso/con textura, drip, piping espec√≠fico, uso de aer√≥grafo, modelado de figuras, flores de az√∫car/naturales).
        3.  **Complejidad Estimada:** Basado en los detalles, clasifica la complejidad general como 'Simple', 'Moderada' o 'Compleja', y menciona brevemente por qu√© (ej. 'Compleja debido a las figuras modeladas detalladas y m√∫ltiples t√©cnicas').

        Responde √∫nicamente en formato JSON con la siguiente estructura:
        {
          "description": "Descripci√≥n detallada...",
          "techniques": ["T√©cnica 1", "T√©cnica 2", ...],
          "complexity": "Simple/Moderada/Compleja",
          "complexity_reason": "Justificaci√≥n breve..."
        }
        No incluyas nada m√°s fuera del JSON.
    `;

    try {
        const response = await openai.chat.completions.create({
            model: "gpt-4o", // Modelo con capacidad de visi√≥n
            messages: [
                {
                    role: "user",
                    content: [
                        { type: "text", text: prompt },
                        {
                            type: "image_url",
                            image_url: {
                                // Aseg√∫rate que el base64 string incluya el prefijo MIME type
                                // ej: "data:image/jpeg;base64,..."
                                "url": imageBase64,
                                "detail": "low" // Puedes usar 'high' para m√°s detalle (y costo)
                            },
                        },
                    ],
                },
            ],
            max_tokens: 500, // Ajusta seg√∫n necesidad
            response_format: { type: "json_object" },
        });

        const resultJsonString = response.choices[0].message.content;
        console.log("ü§ñ Respuesta de An√°lisis Visual IA:", resultJsonString);
        const result = JSON.parse(resultJsonString);

         // Validar estructura b√°sica
         if (!result || typeof result.description !== 'string' || !Array.isArray(result.techniques) || typeof result.complexity !== 'string') {
            throw new Error("La respuesta de la IA (Visi√≥n) no tiene el formato esperado.");
        }

        return result;

    } catch (error) {
        console.error("‚ùå Error llamando a OpenAI Vision:", error);
        throw new Error(`Error en el an√°lisis de imagen con IA: ${error.response?.data?.error?.message || error.message}`);
    }
}

module.exports = { analyzeInspirationImage };